{"version":3,"file":"static/js/276.d35bd735.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/FilterContactForm/FilterContactForm.module.css?2d6f","components/FilterContactForm/FilterContactForm.jsx","components/pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilterValue = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name.includes(normalizedFilter);\n    });\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputTitle\":\"ContactForm_inputTitle__Gmsiy\",\"inputText\":\"ContactForm_inputText__pOiDY\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (\n      !contacts.some(\n        contact =>\n          contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      )\n    ) {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          number: form.elements.number.value,\n        })\n      );\n      form.reset();\n      return;\n    }\n    alert(`${form.elements.name.value} is already in contacts.`);\n  };\n\n  return (\n    <>\n      <h1 className={style.title}>Phonebook</h1>\n      <form onSubmit={handleSubmit} className={style.contactForm}>\n        <label className={style.inputTitle}>\n          <span className={style.inputText}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={style.formInput}\n          />\n        </label>\n        <label className={style.inputTitle}>\n          <span className={style.inputText}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={style.formInput}\n          />\n        </label>\n        <button type=\"submit\" className={style.formBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactListText\":\"ContactListItem_contactListText__jTfo-\",\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport style from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact: { name, number, id } }) => {\n  return (\n    <li className={style.contactListItem} key={id}>\n      <p className={style.contactListText}>\n        {name}: {number}\n      </p>\n      <ButtonDelete id={id} />\n    </li>\n  );\n};\n\nconst ButtonDelete = ({ id }) => {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onClick={() => dispatch(deleteContact(id))}\n      className={style.buttonDelete}\n    >\n      Delete\n    </button>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n\nButtonDelete.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactListItem } from 'components/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={style.contactList}>\n          {contacts.map(contact => {\n            return <ContactListItem contact={contact} key={contact.id} />;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FilterContactForm_title__wGFDu\",\"inputTitle\":\"FilterContactForm_inputTitle__T8Wd8\",\"inputText\":\"FilterContactForm_inputText__b4XoB\",\"filterInput\":\"FilterContactForm_filterInput__IcKfY\"};","import { filterContacts } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport style from './FilterContactForm.module.css';\n\nexport const FilterContactForm = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  return (\n    <>\n      <h2 className={style.title}>Contacts</h2>\n      <label className={style.inputTitle}>\n        <span className={style.inputText}>Find contacts by name</span>\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={evt => dispatch(filterContacts(evt.currentTarget.value))}\n          className={style.filterInput}\n        />\n      </label>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { FilterContactForm } from 'components/FilterContactForm';\n\nexport default function Contacts() {\n  return (\n    <main>\n      <ContactForm />\n      <FilterContactForm />\n      <ContactList />\n    </main>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilterValue","state","filter","selectContacts","contacts","selectVisibleContacts","filterValue","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","className","style","onSubmit","evt","preventDefault","form","currentTarget","some","contact","elements","addContact","number","reset","alert","type","pattern","title","required","ContactListItem","id","ButtonDelete","onClick","deleteContact","ContactList","FilterContactForm","onChange","filterContacts","Contacts"],"sourceRoot":""}