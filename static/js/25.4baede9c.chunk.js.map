{"version":3,"file":"static/js/25.4baede9c.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/FilterContactForm/FilterContactForm.module.css?2d6f","components/FilterContactForm/FilterContactForm.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/pages/Contacts.jsx"],"sourcesContent":["export const selectFilterValue = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name.includes(normalizedFilter);\n    });\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputTitle\":\"ContactForm_inputTitle__Gmsiy\",\"inputText\":\"ContactForm_inputText__pOiDY\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (\n      !contacts.some(\n        contact =>\n          contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      )\n    ) {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          number: form.elements.number.value,\n        })\n      );\n      form.reset();\n      return;\n    }\n    alert(`${form.elements.name.value} is already in contacts.`);\n  };\n\n  return (\n    <>\n      <h1 className={style.title}>Phonebook</h1>\n      <form onSubmit={handleSubmit} className={style.contactForm}>\n        <label className={style.inputTitle}>\n          <span className={style.inputText}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={style.formInput}\n          />\n        </label>\n        <label className={style.inputTitle}>\n          <span className={style.inputText}>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={style.formInput}\n          />\n        </label>\n        <button type=\"submit\" className={style.formBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactListText\":\"ContactListItem_contactListText__jTfo-\",\"number\":\"ContactListItem_number__j2Ar0\",\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport style from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact: { name, number, id } }) => {\n  return (\n    <li className={style.contactListItem} key={id}>\n      <p className={style.contactListText}>\n        {name} <span className={style.number}>{number}</span>\n      </p>\n      <ButtonDelete id={id} />\n    </li>\n  );\n};\n\nconst ButtonDelete = ({ id }) => {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      onClick={() => dispatch(deleteContact(id))}\n      className={style.buttonDelete}\n    >\n      Delete\n    </button>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n\nButtonDelete.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactListItem } from 'components/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={style.contactList}>\n          {contacts.map(contact => {\n            return <ContactListItem contact={contact} key={contact.id} />;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FilterContactForm_title__wGFDu\",\"inputTitle\":\"FilterContactForm_inputTitle__T8Wd8\",\"inputText\":\"FilterContactForm_inputText__b4XoB\",\"filterInput\":\"FilterContactForm_filterInput__IcKfY\"};","import { filterContacts } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport style from './FilterContactForm.module.css';\n\nexport const FilterContactForm = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  return (\n    <>\n      <h2 className={style.title}>Contacts</h2>\n      <label className={style.inputTitle}>\n        <span className={style.inputText}>Find contacts by name</span>\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={evt => dispatch(filterContacts(evt.currentTarget.value))}\n          className={style.filterInput}\n        />\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#000\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#000\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { FilterContactForm } from 'components/FilterContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isNeedToShow = !isLoading && !error;\n\n  return (\n    <main>\n      <ContactForm />\n      <FilterContactForm />\n\n      {isNeedToShow ? <ContactList /> : <Loader />}\n    </main>\n  );\n}\n"],"names":["selectFilterValue","state","filter","selectContacts","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterValue","normalizedFilter","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useSelector","className","style","onSubmit","evt","preventDefault","form","currentTarget","some","contact","elements","value","addContact","number","reset","alert","type","pattern","title","required","ContactListItem","id","ButtonDelete","onClick","deleteContact","ContactList","length","map","FilterContactForm","onChange","filterContacts","Loader","styles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Contacts","useEffect","fetchContacts","isNeedToShow"],"sourceRoot":""}